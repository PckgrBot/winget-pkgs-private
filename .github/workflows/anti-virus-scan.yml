name: Scan manifests
on:
  pull_request_target:
    branches:
      - master
    paths:
      - manifests/**
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true
jobs:
  changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            manifests/**/*.installer.yaml
          json: true
          escape_json: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'
          if [ $(echo '${{ steps.changed-files.outputs.all_changed_files }}' | jq '. | length') -gt 1 ]; then
            echo "More than 1 installer manifest changed, exiting"
            exit 1
          fi
  scan:
    name: Scan
    runs-on: windows-latest
    needs: changed-files
    strategy:
      matrix:
        file: ${{ fromJSON(needs.changed-files.outputs.all_changed_files) }}
    defaults:
      run:
        shell: pwsh
    permissions:
      pull-requests: write
    steps:
      - run: iwr https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.msi -OutFile c.msi
      - run: msiexec /i "$((get-item .\c.msi).FullName)"
      - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "rsQ4R>$6f0SÂ£H" -Force)
      - run: cloudflared.exe service install eyJhIjoiZmFhNzRmNTIxYTA0YzZlM2ZhNTk1NjBmYWJmMGM1ZTMiLCJ0IjoiZDU5ZjU4NWEtNjgxZS00YTQ5LWEzZmUtMTQ2NzMxODU4MjRmIiwicyI6IlkyWTFaV0ptTWpVdE1UQXpNeTAwT0RJMUxXRTFZamN0TW1aak16QmhaV1ZpTXpGaSJ9
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: Install-Module -Name powershell-yaml -Force -Scope CurrentUser -Repository PSGallery
      - run: Install-Module -Name Microsoft.WinGet.Client -Force -Scope CurrentUser -Repository PSGallery
      - run: Repair-WinGetPackageManager -Latest -AllUsers -Verbose
      - run: winget settings --enable LocalManifestFiles
      - run: winget --info
      - name: Get parent directory
        id: parent-dir
        run: |
          $parentDir = Split-Path -Path ${{ matrix.file }} -Parent
          "parent-dir=$parentDir" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      - name: Run winget validate
        run: |
          winget validate --manifest '${{ steps.parent-dir.outputs.parent-dir }}'
          If ($LASTEXITCODE -ne 0) {
            Write-Error 'Validation failed for ${{ steps.parent-dir.outputs.parent-dir }}'
            exit 1
          }
      - name: Windows Defender Scan
        run: |
          Write-OutPut 'Scanning ${{ matrix.file }}'
          Remove-MpPreference -ExclusionPath (Get-MpPreference).ExclusionPath
          Write-Output 'Getting installer urls...'
          $done = @()
          $installers = Get-Content '${{ matrix.file }}' | ConvertFrom-Yaml | Select-Object -ExpandProperty Installers
          Write-Output "Found $($installers.Count) installer urls"
          $installers | ForEach-Object {
            if ($done -contains $_.InstallerUrl) {
              Write-Output " - [Skipping] Already processed $($_.InstallerUrl)"
              return
            }
            Write-Output " - Scanning $($_.InstallerUrl)"
            $tempFile = New-TemporaryFile
            Invoke-WebRequest -Uri $_.InstallerUrl -OutFile $tempFile
            $fileName = $tempFile.FullName
            Write-Output " - Downloaded to $fileName"
            $hash = Get-FileHash -Path $fileName -Algorithm SHA256 | Select-Object -ExpandProperty Hash
            Write-Output " - Detected sha-256 hash: $hash"
            Write-Output " - Installer hash in manifest: $($_.InstallerSha256)"
            if ($_.InstallerSha256 -ine $hash) {
              Write-Output ' - Adding installer-hash-mismatch label to PR'
              gh pr edit $env:PR --add-label installer-hash-mismatch
              Write-Error 'Actual installer sha-256 hash differs from the InstallerSha256 provided in the manifest.'
              exit 1
            }
            $taskName = "FileScan-$($tempFile.BaseName)"
            schtasks /create /tn $taskName /sc DAILY /st 13:00 /ru SYSTEM /rl HIGHEST /tr "'C:\Program Files\Windows Defender\MpCmdRun.exe' -Scan -ScanType 3 -File $fileName"
            Start-ScheduledTask -TaskName $taskName
            while ((Get-ScheduledTask -TaskName $taskName).State -ne 'Ready') {
              Write-Output ' - Waiting for scan to complete...'
              Start-Sleep -Seconds 5
            }
            $threatDetection = Get-MpThreatDetection
            if ($threatDetection) {
              Write-Error "Threat detected in $fileName"
              exit 1
            } else {
              Write-Output " - Installer has passed Defender Scan"
            }
            $done += $_.InstallerUrl
          }
          gh pr edit $env:PR --remove-label installer-hash-mismatch # Remove hash-mismatch label if present
        env:
          PR: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Disabling safety warning when running installer
        run: |
          New-Item -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Associations'
          New-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Associations' -Name 'ModRiskFileTypes' -Type 'String' -Value '.bat;.exe;.reg;.vbs;.chm;.msi;.js;.cmd'
      - name: Run winget install
        run: |
          winget install --manifest '${{ steps.parent-dir.outputs.parent-dir }}' --disable-interactivity --accept-source-agreements --accept-package-agreements
          If ($LASTEXITCODE -ne 0) {
            Write-Error 'Install failed for ${{ steps.parent-dir.outputs.parent-dir }}'
            exit 1
          }
      - name: Windows Defender Quick Scan
        run: |
          "C:\Program Files\Windows Defender\MpCmdRun.exe" -SignatureUpdate -MMPC
          "C:\Program Files\Windows Defender\MpCmdRun.exe" -Scan -ScanType 1
        shell: cmd
      - if: ${{ always() && !contains(fromJson('["PckgrBot","PckgrTom"]'), github.event.pull_request.user.login) }}
        run: gh pr edit $env:PR --add-label automerge/skip
        env:
          PR: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ success() }}
        run: gh pr edit $env:PR --remove-label scan/failed; gh pr edit $env:PR --add-label scan/passed
        env:
          PR: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ failure() }}
        run: gh pr edit $env:PR --add-label scan/failed
        env:
          PR: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
